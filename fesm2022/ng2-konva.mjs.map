{"version":3,"file":"ng2-konva.mjs","sources":["../../../projects/ng2-konva/src/lib/utils/updatePicture.ts","../../../projects/ng2-konva/src/lib/utils/applyNodeProps.ts","../../../projects/ng2-konva/src/lib/utils/index.ts","../../../projects/ng2-konva/src/lib/components/core-shape.component.ts","../../../projects/ng2-konva/src/lib/components/stage.component.ts","../../../projects/ng2-konva/src/lib/interfaces/ko-component.interface.ts","../../../projects/ng2-konva/src/public-api.ts","../../../projects/ng2-konva/src/ng2-konva.ts"],"sourcesContent":["// adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\r\n\r\nimport Konva from 'konva';\r\nimport Node = Konva.Node;\r\n\r\nexport default function updatePicture(node: Node) {\r\n  const drawingNode = node.getLayer() || node.getStage();\r\n  if (drawingNode) {\r\n    drawingNode.batchDraw();\r\n  }\r\n}\r\n","// adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\r\n\r\nimport updatePicture from './updatePicture';\r\nimport { KonvaComponent } from '../interfaces/ko-component.interface';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { NgKonvaEventObject } from '../interfaces/ngKonvaEventObject';\r\nimport { PropsType } from './types';\r\n\r\nexport default function applyNodeProps(\r\n  component: KonvaComponent,\r\n  props: PropsType = {},\r\n  oldProps: PropsType = {}\r\n): void {\r\n  if ('id' in props) {\r\n    const message = `ng2-konva: You are using \"id\" attribute for Konva node. In some very rare cases it may produce bugs. Currently we recommend not to use it and use \"name\" attribute instead.`;\r\n    console.warn(message);\r\n  }\r\n\r\n  const instance = component.getStage();\r\n  const updatedProps: PropsType = {};\r\n  let hasUpdates = false;\r\n\r\n  Object.keys(oldProps).forEach((key) => {\r\n    const isEvent = key.slice(0, 2) === 'on';\r\n    const propChanged = oldProps[key] !== props[key];\r\n    if (isEvent && propChanged) {\r\n      let eventName = key.slice(2).toLowerCase();\r\n      if (eventName.slice(0, 7) === 'content') {\r\n        eventName =\r\n          'content' + eventName.slice(7, 8).toUpperCase() + eventName.slice(8);\r\n      }\r\n      instance.off(eventName, oldProps[key]);\r\n    }\r\n    const toRemove = !Object.hasOwn(props, key);\r\n    if (toRemove) {\r\n      instance.setAttr(key, undefined);\r\n    }\r\n  });\r\n  Object.keys(props).forEach((key) => {\r\n    const isEvent = key.slice(0, 2) === 'on';\r\n    const toAdd = oldProps[key] !== props[key];\r\n    if (isEvent && toAdd) {\r\n      let eventName = key.slice(2).toLowerCase();\r\n      if (eventName.slice(0, 7) === 'content') {\r\n        eventName =\r\n          'content' + eventName.slice(7, 8).toUpperCase() + eventName.slice(8);\r\n      }\r\n      if (props[key]) {\r\n        instance.off(eventName);\r\n        instance.on(eventName, (event: KonvaEventObject<unknown>) => {\r\n          props[key]({\r\n            angularComponent: component,\r\n            event,\r\n          } as NgKonvaEventObject<unknown>);\r\n        });\r\n      }\r\n    }\r\n    if (\r\n      !isEvent &&\r\n      (props[key] !== oldProps[key] || props[key] !== instance.getAttr(key))\r\n    ) {\r\n      hasUpdates = true;\r\n      updatedProps[key] = props[key];\r\n    }\r\n  });\r\n\r\n  if (hasUpdates) {\r\n    instance.setAttrs(updatedProps);\r\n    updatePicture(instance);\r\n    let val;\r\n    Object.keys(updatedProps).forEach((prop) => {\r\n      val = updatedProps[prop];\r\n      if (val instanceof Image && !val.complete) {\r\n        const node = instance;\r\n        val.addEventListener('load', function () {\r\n          const layer = node.getLayer();\r\n          if (layer) {\r\n            layer.batchDraw();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import updatePicture from './updatePicture';\r\nimport applyNodeProps from './applyNodeProps';\r\nimport { KonvaComponent } from '../interfaces/ko-component.interface';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { ListenerRecord } from './types';\r\n\r\nfunction camelize(str: string): string {\r\n  return str\r\n    .replace(/^\\w|[A-Z]|\\b\\w/g, function (letter, index) {\r\n      return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\r\n    })\r\n    .replace(/\\s+/g, '');\r\n}\r\n\r\nfunction capitalizeFirstLetter(string: string): string {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function getName(componentTag: string): string {\r\n  return capitalizeFirstLetter(\r\n    camelize(componentTag.slice(3).replace('-', ' '))\r\n  );\r\n}\r\n\r\nexport function createListener(instance: KonvaComponent): ListenerRecord {\r\n  const output: ListenerRecord = {};\r\n  [\r\n    'mouseover',\r\n    'mousemove',\r\n    'mouseout',\r\n    'mouseenter',\r\n    'mouseleave',\r\n    'mousedown',\r\n    'mouseup',\r\n    'wheel',\r\n    'contextmenu',\r\n    'click',\r\n    'dblclick',\r\n    'touchstart',\r\n    'touchmove',\r\n    'touchend',\r\n    'tap',\r\n    'dbltap',\r\n    'dragstart',\r\n    'dragmove',\r\n    'dragend',\r\n  ].forEach((eventName) => {\r\n    const name: keyof KonvaComponent = <keyof KonvaComponent>eventName;\r\n\r\n    const eventEmitter: EventEmitter<unknown> = <EventEmitter<unknown>>(\r\n      instance[name]\r\n    );\r\n    if (eventEmitter.observed) {\r\n      output['on' + eventName] = eventEmitter.emit.bind(eventEmitter);\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\nexport { updatePicture, applyNodeProps };\r\n","/* eslint-disable @angular-eslint/no-output-native */\r\nimport {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ContentChildren,\r\n  QueryList,\r\n  OnDestroy,\r\n  OnInit,\r\n  inject,\r\n  AfterContentChecked,\r\n} from '@angular/core';\r\nimport { getName, createListener, applyNodeProps } from '../utils/index';\r\nimport { KonvaComponent } from '../interfaces/ko-component.interface';\r\nimport { ShapeConfigTypes } from '../utils/configTypes';\r\nimport { ShapeTypes } from '../utils/shapeTypes';\r\nimport Konva from 'konva';\r\nimport { updatePicture } from '../utils';\r\nimport { Group } from 'konva/lib/Group';\r\nimport { Layer } from 'konva/lib/Layer';\r\nimport { Shape } from 'konva/lib/Shape';\r\nimport { Sprite, SpriteConfig } from 'konva/lib/shapes/Sprite';\r\nimport { Arc } from 'konva/lib/shapes/Arc';\r\nimport { Arrow } from 'konva/lib/shapes/Arrow';\r\nimport { Circle } from 'konva/lib/shapes/Circle';\r\nimport { Ellipse } from 'konva/lib/shapes/Ellipse';\r\nimport { Image } from 'konva/lib/shapes/Image';\r\nimport { Label, Tag } from 'konva/lib/shapes/Label';\r\nimport { Line } from 'konva/lib/shapes/Line';\r\nimport { Path } from 'konva/lib/shapes/Path';\r\nimport { Rect } from 'konva/lib/shapes/Rect';\r\nimport { RegularPolygon } from 'konva/lib/shapes/RegularPolygon';\r\nimport { Ring } from 'konva/lib/shapes/Ring';\r\nimport { Star } from 'konva/lib/shapes/Star';\r\nimport { Text } from 'konva/lib/shapes/Text';\r\nimport { TextPath } from 'konva/lib/shapes/TextPath';\r\nimport { Transformer } from 'konva/lib/shapes/Transformer';\r\nimport { Wedge } from 'konva/lib/shapes/Wedge';\r\nimport { FastLayer } from 'konva/lib/FastLayer';\r\nimport { NgKonvaEventObject } from '../interfaces/ngKonvaEventObject';\r\nimport { PropsType } from '../utils/types';\r\n\r\n@Component({\r\n  selector:\r\n    'ko-shape, ko-layer, ko-circle, ko-fastlayer, ko-group, ko-label, ko-rect, ko-ellipse, ko-wedge, ko-line, ko-sprite, ko-image, ko-text, ko-text-path, ko-star, ko-ring, ko-arc, ko-tag, ko-path, ko-regular-polygon, ko-arrow, ko-transformer',\r\n  standalone: true,\r\n  template: `<div><ng-content></ng-content></div>`,\r\n})\r\nexport class CoreShapeComponent\r\n  implements KonvaComponent, AfterContentChecked, OnDestroy, OnInit\r\n{\r\n  @ContentChildren(CoreShapeComponent)\r\n  shapes = new QueryList<CoreShapeComponent>();\r\n  @Input() set config(config: ShapeConfigTypes) {\r\n    this._config = config;\r\n    this.uploadKonva(config);\r\n  }\r\n  get config(): ShapeConfigTypes {\r\n    return this._config;\r\n  }\r\n\r\n  @Output() mouseover: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mousemove: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseout: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseenter: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseleave: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mousedown: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseup: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() wheel: EventEmitter<NgKonvaEventObject<WheelEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<WheelEvent>>();\r\n  @Output() contextmenu: EventEmitter<NgKonvaEventObject<PointerEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<PointerEvent>>();\r\n  @Output() click: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dblclick: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() touchstart: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() touchmove: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() touchend: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() tap: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() dbltap: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() dragstart: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dragmove: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dragend: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n\r\n  public nameNode: keyof typeof ShapeTypes | 'Shape' | 'Sprite' = getName(\r\n    inject(ElementRef).nativeElement.localName\r\n  ) as keyof typeof ShapeTypes | 'Shape' | 'Sprite';\r\n\r\n  private cacheProps: PropsType = {};\r\n  private _stage:\r\n    | Shape\r\n    | Arc\r\n    | Arrow\r\n    | Circle\r\n    | Ellipse\r\n    | Image\r\n    | Label\r\n    | Tag\r\n    | Line\r\n    | Path\r\n    | Rect\r\n    | RegularPolygon\r\n    | Ring\r\n    | Sprite\r\n    | Star\r\n    | Text\r\n    | TextPath\r\n    | Transformer\r\n    | Wedge\r\n    | Group\r\n    | Layer\r\n    | FastLayer;\r\n  protected _config: ShapeConfigTypes;\r\n\r\n  public getStage():\r\n    | Shape\r\n    | Arc\r\n    | Arrow\r\n    | Circle\r\n    | Ellipse\r\n    | Image\r\n    | Label\r\n    | Tag\r\n    | Line\r\n    | Path\r\n    | Rect\r\n    | RegularPolygon\r\n    | Ring\r\n    | Sprite\r\n    | Star\r\n    | Text\r\n    | TextPath\r\n    | Transformer\r\n    | Wedge\r\n    | Group\r\n    | Layer\r\n    | FastLayer {\r\n    return this._stage;\r\n  }\r\n\r\n  public getConfig(): ShapeConfigTypes {\r\n    return this._config || {};\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initKonva();\r\n  }\r\n\r\n  private initKonva(): void {\r\n    if (!this._stage) {\r\n      this._stage = new Shape();\r\n    }\r\n    if (this.nameNode === 'Shape') {\r\n      this._stage = new Shape();\r\n    } else if (this.nameNode === 'Sprite') {\r\n      this._stage = new Sprite(this.config as SpriteConfig);\r\n    } else {\r\n      this._stage = new Konva[this.nameNode](undefined);\r\n    }\r\n\r\n    const animationStage = this._stage.to.bind(this._stage);\r\n\r\n    this._stage.to = (newConfig: ShapeConfigTypes): void => {\r\n      animationStage(newConfig);\r\n      setTimeout(() => {\r\n        Object.keys(this._stage.attrs).forEach((key) => {\r\n          if (typeof this._stage.attrs[key] !== 'function') {\r\n            this.config[key] = this._stage.attrs[key];\r\n          }\r\n        });\r\n      }, 200);\r\n    };\r\n\r\n    if (this._config) {\r\n      this.uploadKonva(this.config);\r\n    }\r\n  }\r\n\r\n  protected uploadKonva(config: ShapeConfigTypes): void {\r\n    if (!this._stage) return;\r\n    const props = {\r\n      ...config,\r\n      ...createListener(this),\r\n    };\r\n    applyNodeProps(this, props, this.cacheProps);\r\n    this.cacheProps = props;\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.shapes.forEach((item: CoreShapeComponent) => {\r\n      if (this !== item) {\r\n        if (this._stage instanceof Group || this._stage instanceof Layer) {\r\n          this._stage.add(item.getStage());\r\n        }\r\n        updatePicture(this._stage);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._stage.destroy();\r\n  }\r\n}\r\n","/* eslint-disable @angular-eslint/no-output-native */\r\nimport {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterContentInit,\r\n  ElementRef,\r\n  ContentChildren,\r\n  QueryList,\r\n  OnDestroy,\r\n  inject,\r\n} from '@angular/core';\r\nimport { CoreShapeComponent as CoreShape } from './core-shape.component';\r\nimport { updatePicture, createListener, applyNodeProps } from '../utils/index';\r\nimport { KonvaComponent } from '../interfaces/ko-component.interface';\r\nimport { Stage } from 'konva/lib/Stage';\r\nimport { Layer } from 'konva/lib/Layer';\r\nimport { ContainerConfig } from 'konva/lib/Container';\r\nimport { NgKonvaEventObject } from '../interfaces/ngKonvaEventObject';\r\nimport { PropsType } from '../utils/types';\r\n\r\n@Component({\r\n  selector: 'ko-stage',\r\n  standalone: true,\r\n  template: `<div><ng-content></ng-content></div>`,\r\n})\r\nexport class StageComponent\r\n  implements KonvaComponent, AfterContentInit, OnDestroy\r\n{\r\n  private nodeContainer = inject(ElementRef).nativeElement;\r\n  @ContentChildren(CoreShape) shapes = new QueryList<CoreShape>();\r\n  @Input() set config(config: ContainerConfig) {\r\n    this._config = config;\r\n    if (!this._stage) {\r\n      this._stage = new Stage({\r\n        ...config,\r\n        container: this.nodeContainer,\r\n      });\r\n      this.uploadKonva(config);\r\n    } else {\r\n      this.uploadKonva(config);\r\n    }\r\n  }\r\n\r\n  @Output() mouseover: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mousemove: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseout: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseenter: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseleave: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mousedown: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() mouseup: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() wheel: EventEmitter<NgKonvaEventObject<WheelEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<WheelEvent>>();\r\n  @Output() contextmenu: EventEmitter<NgKonvaEventObject<PointerEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<PointerEvent>>();\r\n  @Output() click: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dblclick: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() touchstart: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() touchmove: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() touchend: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() tap: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() dbltap: EventEmitter<NgKonvaEventObject<TouchEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<TouchEvent>>();\r\n  @Output() dragstart: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dragmove: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n  @Output() dragend: EventEmitter<NgKonvaEventObject<MouseEvent>> =\r\n    new EventEmitter<NgKonvaEventObject<MouseEvent>>();\r\n\r\n  private _stage: Stage;\r\n  private _config: ContainerConfig;\r\n  private cacheProps: PropsType = {};\r\n\r\n  public getStage(): Stage {\r\n    return this._stage;\r\n  }\r\n\r\n  public getConfig(): ContainerConfig {\r\n    return this._config;\r\n  }\r\n\r\n  private uploadKonva(config: ContainerConfig): void {\r\n    const props = {\r\n      ...config,\r\n      ...createListener(this),\r\n    };\r\n    applyNodeProps(this, props, this.cacheProps);\r\n    this.cacheProps = props;\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.shapes.forEach((item: CoreShape) => {\r\n      if (!(item.getStage() instanceof Layer)) {\r\n        throw 'You can only add Layer Nodes to Stage Nodes!';\r\n      }\r\n      this._stage.add(<Layer>item.getStage());\r\n      updatePicture(this._stage);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._stage.destroy();\r\n  }\r\n}\r\n","import { Component, EventEmitter } from '@angular/core';\r\nimport { ShapeConfigTypes } from '../utils/configTypes';\r\nimport { Stage } from 'konva/lib/Stage';\r\nimport { Shape } from 'konva/lib/Shape';\r\nimport { Arc } from 'konva/lib/shapes/Arc';\r\nimport { Arrow } from 'konva/lib/shapes/Arrow';\r\nimport { Circle } from 'konva/lib/shapes/Circle';\r\nimport { Ellipse } from 'konva/lib/shapes/Ellipse';\r\nimport { Image } from 'konva/lib/shapes/Image';\r\nimport { Label, Tag } from 'konva/lib/shapes/Label';\r\nimport { Line } from 'konva/lib/shapes/Line';\r\nimport { Path } from 'konva/lib/shapes/Path';\r\nimport { Rect } from 'konva/lib/shapes/Rect';\r\nimport { RegularPolygon } from 'konva/lib/shapes/RegularPolygon';\r\nimport { Ring } from 'konva/lib/shapes/Ring';\r\nimport { Sprite } from 'konva/lib/shapes/Sprite';\r\nimport { Star } from 'konva/lib/shapes/Star';\r\nimport { Text } from 'konva/lib/shapes/Text';\r\nimport { TextPath } from 'konva/lib/shapes/TextPath';\r\nimport { Transformer } from 'konva/lib/shapes/Transformer';\r\nimport { Wedge } from 'konva/lib/shapes/Wedge';\r\nimport { Group } from 'konva/lib/Group';\r\nimport { Layer } from 'konva/lib/Layer';\r\nimport { FastLayer } from 'konva/lib/FastLayer';\r\nimport { NgKonvaEventObject } from './ngKonvaEventObject';\r\n\r\nexport abstract class KonvaComponent extends Component {\r\n  getStage: () =>\r\n    | Stage\r\n    | Shape\r\n    | Arc\r\n    | Arrow\r\n    | Circle\r\n    | Ellipse\r\n    | Image\r\n    | Label\r\n    | Tag\r\n    | Line\r\n    | Path\r\n    | Rect\r\n    | RegularPolygon\r\n    | Ring\r\n    | Sprite\r\n    | Star\r\n    | Text\r\n    | TextPath\r\n    | Transformer\r\n    | Wedge\r\n    | Group\r\n    | Layer\r\n    | FastLayer;\r\n  getConfig: () => ShapeConfigTypes;\r\n  config: ShapeConfigTypes;\r\n\r\n  mouseover?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mousemove?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mouseout?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mouseenter?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mouseleave?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mousedown?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  mouseup?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  wheel?: EventEmitter<NgKonvaEventObject<WheelEvent>>;\r\n  contextmenu?: EventEmitter<NgKonvaEventObject<PointerEvent>>;\r\n  click?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  dblclick?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  touchstart?: EventEmitter<NgKonvaEventObject<TouchEvent>>;\r\n  touchmove?: EventEmitter<NgKonvaEventObject<TouchEvent>>;\r\n  touchend?: EventEmitter<NgKonvaEventObject<TouchEvent>>;\r\n  tap?: EventEmitter<NgKonvaEventObject<TouchEvent>>;\r\n  dbltap?: EventEmitter<NgKonvaEventObject<TouchEvent>>;\r\n  dragstart?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  dragmove?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n  dragend?: EventEmitter<NgKonvaEventObject<MouseEvent>>;\r\n}\r\n","/*\r\n * Public API Surface of ng2-konva\r\n */\r\nexport { CoreShapeComponent } from './lib/components/core-shape.component';\r\nexport { StageComponent } from './lib/components/stage.component';\r\nexport { KonvaComponent } from './lib/interfaces/ko-component.interface';\r\nexport { NgKonvaEventObject } from './lib/interfaces/ngKonvaEventObject';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["CoreShape"],"mappings":";;;;;;;;;AAAA;AAKwB,SAAA,aAAa,CAAC,IAAU,EAAA;IAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACvD,IAAI,WAAW,EAAE;QACf,WAAW,CAAC,SAAS,EAAE,CAAC;KACzB;AACH;;ACVA;AAQc,SAAU,cAAc,CACpC,SAAyB,EACzB,KAAmB,GAAA,EAAE,EACrB,QAAA,GAAsB,EAAE,EAAA;AAExB,IAAA,IAAI,IAAI,IAAI,KAAK,EAAE;QACjB,MAAM,OAAO,GAAG,CAAA,2KAAA,CAA6K,CAAC;AAC9L,QAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvB;AAED,IAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;IACtC,MAAM,YAAY,GAAc,EAAE,CAAC;IACnC,IAAI,UAAU,GAAG,KAAK,CAAC;IAEvB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACpC,QAAA,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;QACzC,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC;AACjD,QAAA,IAAI,OAAO,IAAI,WAAW,EAAE;YAC1B,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,EAAE;gBACvC,SAAS;AACP,oBAAA,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxE;YACD,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SACxC;QACD,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC5C,IAAI,QAAQ,EAAE;AACZ,YAAA,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;SAClC;AACH,KAAC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACjC,QAAA,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;QACzC,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3C,QAAA,IAAI,OAAO,IAAI,KAAK,EAAE;YACpB,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,EAAE;gBACvC,SAAS;AACP,oBAAA,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxE;AACD,YAAA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;AACd,gBAAA,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACxB,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,KAAgC,KAAI;oBAC1D,KAAK,CAAC,GAAG,CAAC,CAAC;AACT,wBAAA,gBAAgB,EAAE,SAAS;wBAC3B,KAAK;AACyB,qBAAA,CAAC,CAAC;AACpC,iBAAC,CAAC,CAAC;aACJ;SACF;AACD,QAAA,IACE,CAAC,OAAO;aACP,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACtE;YACA,UAAU,GAAG,IAAI,CAAC;YAClB,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;SAChC;AACH,KAAC,CAAC,CAAC;IAEH,IAAI,UAAU,EAAE;AACd,QAAA,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAChC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxB,QAAA,IAAI,GAAG,CAAC;QACR,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACzC,YAAA,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,GAAG,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACzC,MAAM,IAAI,GAAG,QAAQ,CAAC;AACtB,gBAAA,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAA;AAC3B,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC9B,IAAI,KAAK,EAAE;wBACT,KAAK,CAAC,SAAS,EAAE,CAAC;qBACnB;AACH,iBAAC,CAAC,CAAC;aACJ;AACH,SAAC,CAAC,CAAC;KACJ;AACH;;AC7EA,SAAS,QAAQ,CAAC,GAAW,EAAA;AAC3B,IAAA,OAAO,GAAG;AACP,SAAA,OAAO,CAAC,iBAAiB,EAAE,UAAU,MAAM,EAAE,KAAK,EAAA;AACjD,QAAA,OAAO,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAClE,KAAC,CAAC;AACD,SAAA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACzB,CAAC;AAED,SAAS,qBAAqB,CAAC,MAAc,EAAA;AAC3C,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAEK,SAAU,OAAO,CAAC,YAAoB,EAAA;AAC1C,IAAA,OAAO,qBAAqB,CAC1B,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAClD,CAAC;AACJ,CAAC;AAEK,SAAU,cAAc,CAAC,QAAwB,EAAA;IACrD,MAAM,MAAM,GAAmB,EAAE,CAAC;AAClC,IAAA;QACE,WAAW;QACX,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,SAAS;QACT,OAAO;QACP,aAAa;QACb,OAAO;QACP,UAAU;QACV,YAAY;QACZ,WAAW;QACX,UAAU;QACV,KAAK;QACL,QAAQ;QACR,WAAW;QACX,UAAU;QACV,SAAS;AACV,KAAA,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;QACtB,MAAM,IAAI,GAA+C,SAAS,CAAC;QAEnE,MAAM,YAAY,IAChB,QAAQ,CAAC,IAAI,CAAC,CACf,CAAC;AACF,QAAA,IAAI,YAAY,CAAC,QAAQ,EAAE;AACzB,YAAA,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjE;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,MAAM,CAAC;AAChB;;ACzDA;MAkDa,kBAAkB,CAAA;AAI7B,IAAA,MAAM,GAAG,IAAI,SAAS,EAAsB,CAAC;IAC7C,IAAa,MAAM,CAAC,MAAwB,EAAA;AAC1C,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC1B;AACD,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAES,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,OAAO,GACf,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,KAAK,GACb,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,WAAW,GACnB,IAAI,YAAY,EAAoC,CAAC;AAC7C,IAAA,KAAK,GACb,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,GAAG,GACX,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,MAAM,GACd,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,OAAO,GACf,IAAI,YAAY,EAAkC,CAAC;AAE9C,IAAA,QAAQ,GAAiD,OAAO,CACrE,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,SAAS,CACK,CAAC;IAE1C,UAAU,GAAc,EAAE,CAAC;AAC3B,IAAA,MAAM,CAsBA;AACJ,IAAA,OAAO,CAAmB;IAE7B,QAAQ,GAAA;QAuBb,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAEM,SAAS,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;KAC3B;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,SAAS,GAAA;AACf,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;SAC3B;AACD,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;AAC7B,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;SAC3B;AAAM,aAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAsB,CAAC,CAAC;SACvD;aAAM;AACL,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;SACnD;AAED,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExD,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,SAA2B,KAAU;YACrD,cAAc,CAAC,SAAS,CAAC,CAAC;YAC1B,UAAU,CAAC,MAAK;AACd,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AAC7C,oBAAA,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;AAChD,wBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBAC3C;AACH,iBAAC,CAAC,CAAC;aACJ,EAAE,GAAG,CAAC,CAAC;AACV,SAAC,CAAC;AAEF,QAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;KACF;AAES,IAAA,WAAW,CAAC,MAAwB,EAAA;QAC5C,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;AACzB,QAAA,MAAM,KAAK,GAAG;AACZ,YAAA,GAAG,MAAM;YACT,GAAG,cAAc,CAAC,IAAI,CAAC;SACxB,CAAC;QACF,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAED,qBAAqB,GAAA;QACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAwB,KAAI;AAC/C,YAAA,IAAI,IAAI,KAAK,IAAI,EAAE;AACjB,gBAAA,IAAI,IAAI,CAAC,MAAM,YAAY,KAAK,IAAI,IAAI,CAAC,MAAM,YAAY,KAAK,EAAE;oBAChE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAClC;AACD,gBAAA,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5B;AACH,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KACvB;uGAzKU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,8OAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,WAAA,EAAA,aAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,SAAA,EAGZ,kBAAkB,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EALzB,CAAsC,oCAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FAErC,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EACN,8OAA8O;AAChP,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,CAAsC,oCAAA,CAAA;AACjD,iBAAA,CAAA;8BAKC,MAAM,EAAA,CAAA;sBADL,eAAe;uBAAC,kBAAkB,CAAA;gBAEtB,MAAM,EAAA,CAAA;sBAAlB,KAAK;gBAQI,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,OAAO,EAAA,CAAA;sBAAhB,MAAM;gBAEG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBAEG,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAEG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,GAAG,EAAA,CAAA;sBAAZ,MAAM;gBAEG,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,OAAO,EAAA,CAAA;sBAAhB,MAAM;;;ACnGT;MA2Ba,cAAc,CAAA;AAGjB,IAAA,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;AAC7B,IAAA,MAAM,GAAG,IAAI,SAAS,EAAa,CAAC;IAChE,IAAa,MAAM,CAAC,MAAuB,EAAA;AACzC,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC;AACtB,gBAAA,GAAG,MAAM;gBACT,SAAS,EAAE,IAAI,CAAC,aAAa;AAC9B,aAAA,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1B;aAAM;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1B;KACF;AAES,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,OAAO,GACf,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,KAAK,GACb,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,WAAW,GACnB,IAAI,YAAY,EAAoC,CAAC;AAC7C,IAAA,KAAK,GACb,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,UAAU,GAClB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,GAAG,GACX,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,MAAM,GACd,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,SAAS,GACjB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,QAAQ,GAChB,IAAI,YAAY,EAAkC,CAAC;AAC3C,IAAA,OAAO,GACf,IAAI,YAAY,EAAkC,CAAC;AAE7C,IAAA,MAAM,CAAQ;AACd,IAAA,OAAO,CAAkB;IACzB,UAAU,GAAc,EAAE,CAAC;IAE5B,QAAQ,GAAA;QACb,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAEM,SAAS,GAAA;QACd,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAEO,IAAA,WAAW,CAAC,MAAuB,EAAA;AACzC,QAAA,MAAM,KAAK,GAAG;AACZ,YAAA,GAAG,MAAM;YACT,GAAG,cAAc,CAAC,IAAI,CAAC;SACxB,CAAC;QACF,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAe,KAAI;YACtC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,KAAK,CAAC,EAAE;AACvC,gBAAA,MAAM,8CAA8C,CAAC;aACtD;YACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxC,YAAA,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KACvB;uGA1FU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2FAAd,cAAc,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,WAAA,EAAA,aAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,SAAA,EAIRA,kBAAS,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EANhB,CAAsC,oCAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FAErC,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,CAAsC,oCAAA,CAAA;AACjD,iBAAA,CAAA;8BAK6B,MAAM,EAAA,CAAA;sBAAjC,eAAe;uBAACA,kBAAS,CAAA;gBACb,MAAM,EAAA,CAAA;sBAAlB,KAAK;gBAaI,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,OAAO,EAAA,CAAA;sBAAhB,MAAM;gBAEG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBAEG,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAEG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,GAAG,EAAA,CAAA;sBAAZ,MAAM;gBAEG,MAAM,EAAA,CAAA;sBAAf,MAAM;gBAEG,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBAEG,QAAQ,EAAA,CAAA;sBAAjB,MAAM;gBAEG,OAAO,EAAA,CAAA;sBAAhB,MAAM;;;ACvDH,MAAgB,cAAe,SAAQ,SAAS,CAAA;AACpD,IAAA,QAAQ,CAuBM;AACd,IAAA,SAAS,CAAyB;AAClC,IAAA,MAAM,CAAmB;AAEzB,IAAA,SAAS,CAAgD;AACzD,IAAA,SAAS,CAAgD;AACzD,IAAA,QAAQ,CAAgD;AACxD,IAAA,UAAU,CAAgD;AAC1D,IAAA,UAAU,CAAgD;AAC1D,IAAA,SAAS,CAAgD;AACzD,IAAA,OAAO,CAAgD;AACvD,IAAA,KAAK,CAAgD;AACrD,IAAA,WAAW,CAAkD;AAC7D,IAAA,KAAK,CAAgD;AACrD,IAAA,QAAQ,CAAgD;AACxD,IAAA,UAAU,CAAgD;AAC1D,IAAA,SAAS,CAAgD;AACzD,IAAA,QAAQ,CAAgD;AACxD,IAAA,GAAG,CAAgD;AACnD,IAAA,MAAM,CAAgD;AACtD,IAAA,SAAS,CAAgD;AACzD,IAAA,QAAQ,CAAgD;AACxD,IAAA,OAAO,CAAgD;AACxD;;ACzED;;AAEG;;ACFH;;AAEG;;;;"}